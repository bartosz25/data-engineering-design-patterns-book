version: '3.1'
services:
  kafka:
    image: 'bitnami/kafka:3.5'
    container_name: docker_kafka_1
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_DELETE_TOPIC_ENABLE=true
  data_generator:
    depends_on:
      postgres:
        condition: service_healthy
    image: waitingforcode/data-generator-blogging-platform:0.3-beta
    container_name: dedp_data_generator_debezium
    volumes:
      - ./generation_configuration.yaml:/home/data_generator_user/generation_configuration.yaml
    entrypoint:
      - python3
      - /home/data_generator_user/data_generator/generate_dataset.py
      - --config_file
      - /home/data_generator_user/generation_configuration.yaml
  postgres:
    image: quay.io/debezium/postgres:15
    container_name: cdc_postgres
    ports:
     - 5432:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_DB=dedp
    volumes:
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD', 'pg_isready', '-U postgres']
  connect:
    image: quay.io/debezium/connect:2.0
    container_name: cdc_kafka_connect
    ports:
     - 8083:8083
    links:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
